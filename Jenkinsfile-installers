@Library("titan-library") _ 

pipeline {
    agent any
    triggers {
        //cron(cron_string)
        gitlab(triggerOnPush: true, triggerOnMergeRequest: true, branchFilterType: 'All')
    }
    options {
        // Console debug options
        timestamps()
        ansiColor('xterm')
    }

    stages {
        stage("Get POM Version") {
            steps {
                // Clean before checkout / build
                cleanWs()
                checkout scm

                // Get the release information
                script {
                    BRANCH_NAME = "${GIT_BRANCH.startsWith('origin/') ? GIT_BRANCH['origin/'.length()..-1] : GIT_BRANCH}"
                    
                    pomModel = readMavenPom(file: 'pom.xml')
                    pomVersion = pomModel.getVersion()
                    isSnapshot = pomVersion.contains("-SNAPSHOT")
                    pomGroupId = pomModel.groupId
                    repositoryId = 'maven-releases'
                    mvnInstallerArgs = '-P create-installer'

                    if (isSnapshot) {
                        jpackageAppName = "Komet-SNAPSHOT-" + BRANCH_NAME.replaceAll("/", "-")
                        mvnInstallerArgs +=     """ \
                                                    -D"jpackage.app.name"=${jpackageAppName} \
                                                    -D"jpackage.app.dest"=target/dist/snapshot-installer \
                                                    -D"jpackage.app.version"=1.0.${BUILD_NUMBER} \
                                                """
                    }

                    echo "BRANCH_NAME: ${BRANCH_NAME}"
                    echo "pomVersion: ${pomVersion}"
                    echo "isSnapshot: ${isSnapshot}"
                    echo "pomGroupId: ${pomGroupId}"
                }
            }
        }

        stage("Build Installers for Multiple OS and Publish to Nexus Repository Manager") {
            parallel {
                stage("Linux Installer") {
                    agent {
                        label 'linux'
                    }
                    tools {
                        jdk 'default'
                        maven 'default'
                    }
                    stages {
                        stage("Build Linux Installer") {
                            steps {
                                // Clean before checkout / build
                                cleanWs()
                                checkout scm

                                configFileProvider([configFile(fileId: 'settings.xml', variable: 'MAVEN_SETTINGS')]) {
                                    //Build Komet and create installer
                                    sh """
                                        mvn --version
                                        mvn clean install \
                                            -s ${MAVEN_SETTINGS} \
                                            ${mvnInstallerArgs} \
                                            --batch-mode \
                                            -e \
                                            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
                                    """
                                }
                            }
                            post {
                                always {
                                    archiveArtifacts artifacts: 'application/target/dist/snapshot-installer/*.*, application/target/dist/installer/*.*', fingerprint: true
                                }
                            }
                        }
                        stage("Publish Linux Installer Release to Nexus Repository Manager") {
                            when{
                                expression{
                                    buildingTag() && !isSnapshot
                                }
                            }
                            steps {
                                configFileProvider([configFile(fileId: 'settings.xml', variable: 'MAVEN_SETTINGS')]) {
                                    //Deploy Komet Installer to Nexus
                                    sh """
                                        mvn deploy:deploy-file \
                                            --batch-mode \
                                            -e \
                                            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                                            -s ${MAVEN_SETTINGS} \
                                            -Dfile=\$(find application/target/dist/installer/ -name komet-${pomVersion}*.rpm) \
                                            -Durl=https://nexus.build.tinkarbuild.com/repository/maven-releases/ \
                                            -DgroupId=${pomGroupId} \
                                            -DartifactId=komet-installer-linux \
                                            -Dversion=${pomVersion} \
                                            -Dclassifier=unsigned \
                                            -Dtype=pkg \
                                            -Dpackaging=pkg \
                                            -DrepositoryId=titan-maven-releases
                                    """
                                }
                            }
                        }
                    }
                }
                stage("Mac M1 Installer") {
                    agent {
                        label 'mac_m1'
                    }
                    tools {
                        jdk 'default'
                        maven 'default'
                    }
                    stages {
                        stage("Build Mac M1 Installer") {
                            steps {
                                // Clean before checkout / build
                                cleanWs()
                                checkout scm

                                configFileProvider([configFile(fileId: 'settings.xml', variable: 'MAVEN_SETTINGS')]) {
                                    //Build Komet and create installer
                                    sh """
                                        mvn --version
                                        mvn clean install \
                                            -s ${MAVEN_SETTINGS} \
                                            ${mvnInstallerArgs} \
                                            --batch-mode \
                                            -e \
                                            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
                                    """
                                }
                            }
                            post {
                                always {
                                    archiveArtifacts artifacts: 'application/target/dist/snapshot-installer/*.*, application/target/dist/installer/*.*', fingerprint: true
                                }
                            }
                        }
                        stage("Publish Mac M1 Installer Release to Nexus Repository Manager") {
                            when{
                                expression{
                                    buildingTag() && !isSnapshot
                                }
                            }
                            steps{
                                configFileProvider([configFile(fileId: 'settings.xml', variable: 'MAVEN_SETTINGS')]) {
                                    //Deploy Komet Installer to Nexus
                                    sh """
                                        mvn deploy:deploy-file \
                                            --batch-mode \
                                            -e \
                                            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                                            -s ${MAVEN_SETTINGS} \
                                            -Dfile=\$(find application/target/dist/installer/ -name Komet-${pomVersion}*.pkg) \
                                            -Durl=https://nexus.build.tinkarbuild.com/repository/maven-releases/ \
                                            -DgroupId=${pomGroupId} \
                                            -DartifactId=komet-installer-macm1 \
                                            -Dversion=${pomVersion} \
                                            -Dclassifier=unsigned \
                                            -Dtype=pkg \
                                            -Dpackaging=pkg \
                                            -DrepositoryId=titan-maven-releases
                                    """
                                }
                            }
                        }
                    }
                }
                stage("Mac Intel Installer") {
                    agent {
                        label 'mac_intel'
                    }
                    tools {
                        jdk 'default'
                        maven 'default'
                    }
                    stages {
                        stage("Build Mac Intel Installer") {
                            steps {
                                // Clean before checkout / build
                                cleanWs()
                                checkout scm

                                configFileProvider([configFile(fileId: 'settings.xml', variable: 'MAVEN_SETTINGS')]) {
                                    //Build Komet and create installer
                                    sh """
                                    mvn --version
                                    mvn clean install \
                                        -s ${MAVEN_SETTINGS} \
                                        ${mvnInstallerArgs} \
                                        --batch-mode \
                                        -e \
                                        -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
                                    """
                                }
                            }
                            post {
                                always {
                                    archiveArtifacts artifacts: 'application/target/dist/snapshot-installer/*.*, application/target/dist/installer/*.*', fingerprint: true
                                }
                            }
                        }
                        stage("Publish Mac Intel Installer Release to Nexus Repository Manager") {
                            when{
                                expression{
                                    buildingTag() && !isSnapshot
                                }
                            }
                            steps{
                                configFileProvider([configFile(fileId: 'settings.xml', variable: 'MAVEN_SETTINGS')]) {
                                    //Deploy Komet Installer to Nexus
                                    sh """
                                        mvn deploy:deploy-file \
                                            --batch-mode \
                                            -e \
                                            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                                            -s ${MAVEN_SETTINGS} \
                                            -Dfile=\$(find application/target/dist/installer/ -name Komet-${pomVersion}*.pkg) \
                                            -Durl=https://nexus.build.tinkarbuild.com/repository/maven-releases/ \
                                            -DgroupId=${pomGroupId} \
                                            -DartifactId=komet-installer-macintel \
                                            -Dversion=${pomVersion} \
                                            -Dclassifier=unsigned \
                                            -Dtype=pkg \
                                            -Dpackaging=pkg \
                                            -DrepositoryId=titan-maven-releases
                                    """
                                }
                            }
                        }
                    }
                }
                stage("Windows Installer") {
                    agent {
                        label 'windows'
                    }
                    tools {
                        jdk 'default'
                        maven 'default'
                        //wix added to path using jenkins agent environment variables
                    }
                    stages {
                        stage("Build Windows Installer") {
                            steps {
                                // Clean before checkout / build
                                cleanWs()
                                checkout scm

                                script {
                                    mvnInstallerArgs_Windows=mvnInstallerArgs.replaceAll("/","\\\\")
                                }

                                configFileProvider([configFile(fileId: 'settings.xml', variable: 'MAVEN_SETTINGS')]) {
                                    //Build Komet and create installer
                                    bat """
                                        mvn --version && \
                                        mvn clean install \
                                            -s ${MAVEN_SETTINGS} \
                                            ${mvnInstallerArgs_Windows} \
                                            --batch-mode \
                                            -e \
                                            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
                                    """
                                }
                            }
                            post {
                                always {
                                    archiveArtifacts artifacts: 'application/target/dist/snapshot-installer/*.*, application/target/dist/installer/*.*', fingerprint: true
                                }
                            }
                        }
                        stage("Publish Windows Installer Release to Nexus Repository Manager") {
                            when{
                                expression{
                                    buildingTag() && !isSnapshot
                                }
                            }
                            steps{
                                configFileProvider([configFile(fileId: 'settings.xml', variable: 'MAVEN_SETTINGS')]) {
                                    //Deploy Komet Installer to Nexus
                                    bat """
                                        setx JAVA_HOME "${JAVA_HOME}"
                                        set PATH=${JAVA_HOME}\\bin'${M2_HOME}\\bin;${WIX_HOME}\\bin;%PATH%
                                        mvn deploy:deploy-file \
                                            --batch-mode \
                                            -e \
                                            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                                            -s ${MAVEN_SETTINGS} \
                                            -Dfile=application\\target\\dist\\installer\\Komet-${pomVersion}.msi \
                                            -Durl=https://nexus.build.tinkarbuild.com/repository/maven-releases/ \
                                            -DgroupId=${pomGroupId} \
                                            -DartifactId=komet-installer-windows \
                                            -Dversion=${pomVersion} \
                                            -Dclassifier=unsigned \
                                            -Dtype=msi \
                                            -Dpackaging=msi \
                                            -DrepositoryId=titan-maven-releases
                                    """
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            // Clean the workspace after build
            cleanWs(cleanWhenNotBuilt: false,
                deleteDirs: true,
                disableDeferredWipeout: true,
                notFailBuild: true,
                patterns: [
                [pattern: '.gitignore', type: 'INCLUDE']
            ])
        }
    }
}
